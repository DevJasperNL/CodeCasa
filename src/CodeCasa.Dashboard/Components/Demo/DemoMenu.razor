@using CodeCasa.AutoGenerated
@using CodeCasa.CustomEntities.Events
@using CodeCasa.Dashboard.ViewModels
@using NetDaemon.HassModel

@inject IHaContext HaContext
@inject LightEntities LightEntities

<MudIconButton Icon="@Icons.Material.Filled.AutoAwesome" OnClick="ToggleDrawer" />

<MudDrawer 
    @bind-Open="@_open" 
    Overlay="false" 
    Elevation="1" 
    Width="300px" 
    Variant="@DrawerVariant.Temporary">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">Demo Functions</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="ToggleDrawer"
        Size="Size.Medium"
        Style="align-self: center;"  />
    </MudDrawerHeader>
    <MudSwitch @bind-Value="_officeLight.IsOn" Color="Color.Primary" Label="Office Lights" ThumbIcon="@Icons.Material.Filled.Lightbulb" Size="Size.Large" />
    <MudButton OnClick="ShowDashboardNotificationDemo">Show Dashboard Demo Notifications</MudButton>
    <MudButton OnClick="ShowPhoneNotificationDemo">Show Phone Demo Notification</MudButton>
</MudDrawer>

@code {
    private bool _open;

    private LightEntityVm _officeLight = null!;

    protected override void OnInitialized()
    {
        _officeLight = new LightEntityVm(LightEntities.OfficeLights);
    }

    private void ShowDashboardNotificationDemo()
    {
        HaContext.SendEvent(Events.DashboardNotificationDemoEvent);
        ToggleDrawer();
    }

    private void ShowPhoneNotificationDemo()
    {
        HaContext.SendEvent(Events.PhoneNotificationDemoEvent);
        ToggleDrawer();
    }

    private void ToggleDrawer()
    {
        _open = !_open;
    }
}
