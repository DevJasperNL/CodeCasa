using CodeCasa.AutoGenerated;
using CodeCasa.AutoGenerated.Extensions;
using NetDaemon.Extensions.Observables;
using NetDaemon.HassModel.Entities;

namespace CodeCasa.Dashboard.ViewModels;

public class LightEntityVm
{
    private readonly LightEntity _lightEntity;
    private bool _isOn;

    public LightEntityVm (LightEntity lightEntity)
    {
        _lightEntity = lightEntity;
        _isOn = _lightEntity.IsOn();

        _lightEntity.ToOnOffObservable().Subscribe(on => _isOn = on);
    }

    public bool IsOn
    {
        get => _isOn;
        set
        {
            if (value)
            {
                _lightEntity.TurnOn();
            }
            else
            {
                _lightEntity.TurnOff();
            }
            // Note: even though this value will also be updated by the light entity subscription, we update it here to make the UI responsive.
            // For now this implementation assumes the command is executed. In the future we might want to add a timer with polling to be sure.
            _isOn = value;
        }
    }
}