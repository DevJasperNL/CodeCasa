using System.Drawing;
using CodeCasa.AutoGenerated;
using CodeCasa.AutoGenerated.Extensions;
using Microsoft.Extensions.DependencyInjection;
using NetDaemon.AppModel;
using NetDaemon.Extensions.Observables;
using NetDaemon.InputSelectNotifications.Config;
using NetDaemon.InputSelectNotifications.Interact;

namespace CodeCasa.Automations.Apps.Notifications;

[NetDaemonApp]
internal class NotificationOnDashboardWhenOfficeLightsAreOn
{
    public NotificationOnDashboardWhenOfficeLightsAreOn(
        LightEntities lightEntities, 
        [FromKeyedServices("input_select.living_room_panel_notifications")] IInputSelectNotificationEntity inputSelectNotifications)
    {

        var notificationId = $"{nameof(NotificationOnDashboardWhenOfficeLightsAreOn)}_Notification";
        inputSelectNotifications.Notify(new InputSelectNotificationConfig
        {
            Message = "The office lights are on!",
            SecondaryMessage = "Click here to turn them off.",
            Icon = "Icons.Material.Filled.Send",
            BadgeIcon = "Icons.Material.Filled.Warning",
            BadgeIconColor = Color.Red,
            Action = () => lightEntities.OfficeLights.TurnOff()
        }, notificationId);
        //lightEntities.OfficeLights.SubscribeOnOff(
        //    () =>
        //    {
        //        inputSelectNotifications.Notify(new InputSelectNotificationConfig
        //        {
        //            Message = "The office lights are on!",
        //            SecondaryMessage = "Click here to turn them off.",
        //            Icon = "Icons.Material.Filled.Send",
        //            Action = () => lightEntities.OfficeLights.TurnOff()
        //        }, notificationId);
        //        //inputSelectNotifications.Notify(new InputSelectNotificationConfig
        //        //{
        //        //    Message = "The office lights are on2!",
        //        //    SecondaryMessage = "Click here to turn them off2.",
        //        //    Action = () => lightEntities.OfficeLights.TurnOff()
        //        //}, notificationId + "bla");
        //    },
        //    () => inputSelectNotifications.RemoveNotification(notificationId));
    }
}