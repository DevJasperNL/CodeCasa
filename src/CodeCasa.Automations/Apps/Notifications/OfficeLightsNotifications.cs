using CodeCasa.AutoGenerated;
using CodeCasa.AutoGenerated.Extensions;
using CodeCasa.CustomEntities.Notifications.Dashboards;
using CodeCasa.CustomEntities.People;
using NetDaemon.AppModel;
using NetDaemon.Extensions.Observables;
using NetDaemon.Notifications.InputSelect.Config;
using NetDaemon.PhoneNotifications.Config;
using System.Drawing;
using Reactive.Boolean;

namespace CodeCasa.Automations.Apps.Notifications;

/// <summary>
/// This NetDaemonApp will show notifications when the office light is on.
/// It will always show one on the living room dashboard.
/// It will only show one to Jasper if he is at home.
/// </summary>
[NetDaemonApp]
internal class OfficeLightsNotifications
{
    public OfficeLightsNotifications(
        LightEntities lightEntities,
        LivingRoomPanelDashboardNotifications livingRoomPanelDashboardNotifications,
        Jasper jasper)
    {
        /*
         * Note: Using an ID that is consistent between runs also ensures that old notifications are removed/replaced on phones when the app is reloaded.
         * For input select notifications, this doesn't matter, as they are always reset.
         */
        var notificationId = $"{nameof(OfficeLightsNotifications)}_Notification";

        var officeLights = lightEntities.OfficeLights.ToOnOffObservable();
        var jasperHome = jasper.CreateHomeObservable();

        officeLights.SubscribeOnOff(
            () =>
            {
                livingRoomPanelDashboardNotifications.Notify(new InputSelectNotificationConfig
                {
                    Message = "The office lights are on!",
                    SecondaryMessage = "Click here to turn them off.",
                    Icon = "Material.Filled.Lightbulb",
                    IconColor = Color.Yellow,
                    Action = () => lightEntities.OfficeLights.TurnOff()
                }, notificationId);
            },
            () => livingRoomPanelDashboardNotifications.RemoveNotification(notificationId));

        // Only notify Jasper if he is at home and the lights are on.
        jasperHome.And(officeLights).SubscribeOnOff(
            () =>
            {
                jasper.Phone.Notify(new AndroidNotificationConfig
                {
                    Message = $"Hey {jasper.Name}, the office lights are on!",
                    Actions =
                    [
                        new(() => lightEntities.OfficeLights.TurnOff(), "Click here to turn them off.")
                    ]
                }, notificationId);
            },
            () => jasper.Phone.RemoveNotification(notificationId));
    }
}